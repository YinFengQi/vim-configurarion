global !p
def math():
    return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
    return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
    [x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
    return x != '0' and x != '0'
endglobal


# ==== Auto Math Mode ====

snippet `lm|ml` "inline Math" rwA
$${1}$$0
endsnippet

snippet eqt "equation" wA
\begin{equation}
	${1}
\end{equation}
endsnippet

context "math()"
snippet case "cases" iAm
\begin{cases} 
	$1, & $2 
	\\\\ 
	$3, & $4 
\end{cases}
endsnippet

context "math()"
snippet ali "aligned" iAm
\begin{aligned}
	$1 &$2
	\\\\
	$3 &$4
\end{aligned}
endsnippet

# == Auto Adaptive Close ==

context "math()"
snippet ceil "ceil" iAm
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet floor "floor" iAm
\left\lfloor $1 \right\rfloor$0
endsnippet

priority 100
context "math()"
snippet @) "left( right)" Aim
\left( ${1} \right) $0
endsnippet

context "math()"
snippet @| "left| right|" Aim
\left| ${1} \right| $0
endsnippet

context "math()"
snippet @\ "left. right|" Aim
\left. ${1} \right|_{${2}}$0
endsnippet

context "math()"
snippet @} "left\{ right\}" Aim
\left\\{ ${1} \right\\} $0
endsnippet

context "math()"
snippet set "\{ \}" Aim
\\{ ${1} \\}$0
endsnippet

context "math()"
snippet @] "left[ right]" Aim
\left[ ${1} \right] $0
endsnippet

context "math()"
snippet @> "leftangle rightangle" iAm
\left< ${1} \right> $0
endsnippet
priority 0

context "math()"
snippet `\<(\\?[a-zA-Z]\w*({?\w*})?)\|` "Dirac bra" rAim
\bra{`!p snip.rv = match[1]`}
endsnippet

context "math()"
snippet `\|(\\?[a-zA-Z]\w*({?\w*})?)\>` "Dirac ket" Arim
\ket{`!p snip.rv = match[1]`}
endsnippet

context "math()"
snippet bra "Dirac bra" iAm
\bra{$1}$0
endsnippet

context "math()"
snippet ket "Dirac ket" iAm
\ket{$1}$0
endsnippet

priority 200
context "math()"
snippet norm "abs" iAm
\left\| ${1} \right\| $2
endsnippet

context "math()"
snippet abs "absolute value" iAm
\left\vert ${1} \right\vert $0
endsnippet
priority 0

# ==== Common Environment ====

snippet enuma "enumerate" bA
\begin{enumerate}
	\item ${1}
\end{enumerate}$0
endsnippet

snippet itmz "itemize" bA
\begin{itemize}
	\item ${1}
\end{itemize}$0

endsnippet
context "env("enumerate")"
snippet ii "item" bA
\item
endsnippet

snippet beg "begin{} / end{}" bA
\begin{$1}
$0
\end{$1}
endsnippet

# ======== N Series ========
context "math()"
snippet `\b([ijk])=n` "i=1,2,\cdots,n" irAm
`!p snip.rv = match[1]`=1,2,\cdots,${1:n}
endsnippet






